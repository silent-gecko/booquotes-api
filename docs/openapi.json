{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.1.0",
    "title" : "BooQuotes API",
    "description" : "This API allows to retrieve literary quotes and related info from the data collection"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/silent-gecko/Quotes/1.1.0"
  }, {
    "description" : "Local development server",
    "url" : "http://localhost:8080/api/v1"
  } ],
  "paths" : {
    "/quotes" : {
      "get" : {
        "tags" : [ "quotes" ],
        "summary" : "Returns a list of quotes",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Pagination"
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sorting settings",
          "style" : "form",
          "explode" : false,
          "allowReserved" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "date:desc", "date:asc", "book:desc", "book:asc", "author:desc", "author:asc" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/QuotesList"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/quotes/{uuid}" : {
      "get" : {
        "tags" : [ "quotes" ],
        "summary" : "Returns single quote",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully returned single quote item",
            "content" : {
              "application\\json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Quote"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/quotes/{uuid}/download" : {
      "get" : {
        "deprecated" : true,
        "tags" : [ "quotes" ],
        "summary" : "Returns an image with formatted quote data on it",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote image in PNG format",
            "content" : {
              "image\\png" : {
                "schema" : {
                  "type" : "string",
                  "format" : "base64"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/random" : {
      "get" : {
        "tags" : [ "quotes" ],
        "summary" : "Returns one random quote",
        "responses" : {
          "200" : {
            "description" : "Successfully returned single quote item",
            "content" : {
              "application\\json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Quote"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/books/{uuid}/quotes" : {
      "get" : {
        "tags" : [ "quotes" ],
        "summary" : "Returns list of all quotes from the book",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Uuid"
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sorting settings",
          "style" : "form",
          "explode" : false,
          "allowReserved" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "date:desc", "date:asc", "author:desc", "author:asc" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/QuotesList"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/authors/{uuid}/quotes" : {
      "get" : {
        "tags" : [ "quotes" ],
        "summary" : "Returns list of all quotes of the author",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Uuid"
        }, {
          "$ref" : "#/components/parameters/Pagination"
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sorting settings",
          "style" : "form",
          "explode" : false,
          "allowReserved" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "date:desc", "date:asc", "book:desc", "book:asc" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/QuotesList"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/books" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Returns the list of books",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Pagination"
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sorting settings",
          "style" : "form",
          "explode" : false,
          "allowReserved" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "title:desc", "title:asc", "author:desc", "author:asc" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/BooksList"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      },
      "post" : {
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ],
        "tags" : [ "books" ],
        "summary" : "Creates new book",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application\\json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/Created"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "422" : {
            "$ref" : "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/books/{uuid}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/Uuid"
      } ],
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Returns single book data",
        "responses" : {
          "200" : {
            "description" : "Successfully returned book info",
            "content" : {
              "application\\json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Book"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ],
        "tags" : [ "books" ],
        "summary" : "Updates book data",
        "requestBody" : {
          "required" : true,
          "content" : {
            "aplication\\json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookPayload"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "$ref" : "#/components/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "422" : {
            "$ref" : "#/components/responses/UnprocessableEntity"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ],
        "tags" : [ "books" ],
        "summary" : "Deletes the book",
        "responses" : {
          "204" : {
            "$ref" : "#/components/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        }
      }
    },
    "/authors/{uuid}/books" : {
      "get" : {
        "tags" : [ "books" ],
        "summary" : "Returns list of the author books",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Uuid"
        }, {
          "$ref" : "#/components/parameters/Pagination"
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sorting settings",
          "style" : "form",
          "explode" : false,
          "allowReserved" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "title:desc", "title:asc" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/BooksList"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      }
    },
    "/authors" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Returns the list of authors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Pagination"
        }, {
          "in" : "query",
          "name" : "sort",
          "description" : "Sorting settings",
          "style" : "form",
          "explode" : false,
          "allowReserved" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "enum" : [ "name:desc", "name:asc" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/AuthorsList"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      },
      "post" : {
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ],
        "tags" : [ "authors" ],
        "summary" : "Adds new author to the collection",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application\\json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorPayload"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/Created"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "422" : {
            "$ref" : "#/components/responses/UnprocessableEntity"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/authors/{uuid}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/Uuid"
      } ],
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Returns single author data",
        "responses" : {
          "200" : {
            "description" : "Successfully returned author data",
            "content" : {
              "application\\json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Author"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "put" : {
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ],
        "tags" : [ "authors" ],
        "summary" : "Updates author data",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application\\json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorPayload"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "$ref" : "#/components/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "422" : {
            "$ref" : "#/components/responses/UnprocessableEntity"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ],
        "tags" : [ "authors" ],
        "summary" : "Deletes author data",
        "description" : "If author has related books, deletion won't be possible",
        "responses" : {
          "204" : {
            "$ref" : "#/components/responses/NoContent"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "X-Booquotes-Api-Key"
      }
    },
    "parameters" : {
      "Pagination" : {
        "in" : "query",
        "name" : "page",
        "description" : "The number of paginated output",
        "schema" : {
          "type" : "integer",
          "minimum" : 1
        }
      },
      "Uuid" : {
        "in" : "path",
        "name" : "uuid",
        "description" : "Resource identifier",
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        },
        "required" : true
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "Bad Request Error",
        "content" : {
          "application\\json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            },
            "example" : {
              "error" : {
                "code" : 400,
                "message" : "Invalid data supplied."
              }
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized Error",
        "content" : {
          "application\\json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            },
            "example" : {
              "error" : {
                "code" : 401,
                "message" : "Unauthorized."
              }
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Not Found Error",
        "content" : {
          "application\\json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            },
            "example" : {
              "error" : {
                "code" : 404,
                "message" : "Resource not found."
              }
            }
          }
        }
      },
      "UnprocessableEntity" : {
        "description" : "Validation errors",
        "content" : {
          "application\\json" : {
            "schema" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/ErrorResponse"
              }, {
                "type" : "object",
                "properties" : {
                  "errors" : {
                    "type" : "object",
                    "properties" : {
                      "field_name" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        },
                        "example" : [ "Field_name is required.", "Field_name should start with capital letter." ]
                      }
                    }
                  }
                }
              } ]
            }
          }
        }
      },
      "Created" : {
        "description" : "Response when resource element is successfully created",
        "content" : {
          "application\\json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "format" : "uuid"
                    }
                  },
                  "required" : [ "id" ]
                }
              }
            }
          }
        }
      },
      "NoContent" : {
        "description" : "Action completed successfully"
      },
      "Conflict" : {
        "description" : "Action can not be processed because of data conflict",
        "content" : {
          "application\\json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorResponse"
            },
            "example" : {
              "error" : {
                "code" : 409,
                "message" : "Action can not be processed"
              }
            }
          }
        }
      },
      "AuthorsList" : {
        "description" : "Successfully returned list of authors",
        "content" : {
          "application\\json" : {
            "schema" : {
              "allOf" : [ {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AuthorBasic"
                    }
                  }
                }
              }, {
                "$ref" : "#/components/schemas/Pagination"
              } ]
            }
          }
        }
      },
      "BooksList" : {
        "description" : "Successfully returned list of books",
        "content" : {
          "application\\json" : {
            "schema" : {
              "allOf" : [ {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/BookBasic"
                    }
                  }
                }
              }, {
                "$ref" : "#/components/schemas/Pagination"
              } ]
            }
          }
        }
      },
      "QuotesList" : {
        "description" : "Successfully returned list of quotes",
        "content" : {
          "application\\json" : {
            "schema" : {
              "allOf" : [ {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Quote"
                    }
                  }
                }
              }, {
                "$ref" : "#/components/schemas/Pagination"
              } ]
            }
          }
        }
      }
    },
    "schemas" : {
      "Quote" : {
        "description" : "Quote item",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Quote unique id"
          },
          "text" : {
            "type" : "string",
            "description" : "The quote itself",
            "example" : "There is some good in this world, and it’s worth fighting for."
          },
          "book" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid",
                "description" : "Book unique id"
              },
              "title" : {
                "type" : "string",
                "description" : "The title of the book where is quote from",
                "example" : "The Lord Of The Rings"
              }
            }
          },
          "author" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid",
                "description" : "Author unique id"
              },
              "name" : {
                "type" : "string",
                "description" : "The author full name",
                "example" : "J. R. R. Tolkien"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "format" : "url",
                "description" : "Link to the quote endpoint"
              },
              "book" : {
                "type" : "string",
                "format" : "url",
                "description" : "Link to the quote book endpoint"
              },
              "author" : {
                "type" : "string",
                "format" : "url",
                "description" : "Link to the author endpoint"
              }
            }
          }
        },
        "required" : [ "text" ]
      },
      "BookBasic" : {
        "description" : "Minimal data about the book",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Book unique id"
          },
          "title" : {
            "type" : "string",
            "example" : "The Return Of The King",
            "description" : "Book title"
          },
          "author" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid",
                "description" : "Author unique id"
              },
              "name" : {
                "type" : "string",
                "example" : "J. R. R. Tolkien",
                "description" : "Author name"
              }
            }
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "format" : "url",
                "description" : "Detail book data"
              },
              "author" : {
                "type" : "string",
                "format" : "url",
                "description" : "List to the author of the book"
              },
              "quotes" : {
                "type" : "string",
                "format" : "url",
                "description" : "List of quotes of the author"
              }
            }
          }
        },
        "required" : [ "title" ]
      },
      "Book" : {
        "description" : "Full info about the book",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BookBasic"
        }, {
          "type" : "object",
          "properties" : {
            "quotes_count" : {
              "type" : "integer",
              "example" : 5,
              "description" : "The number of quotes from this book"
            },
            "description" : {
              "type" : "string",
              "example" : "The Return of the King is the third and final volume of J. R. R. Tolkien's The Lord of the Rings.",
              "description" : "A brief description of the book",
              "nullable" : true
            }
          }
        } ]
      },
      "BookPayload" : {
        "description" : "Request data",
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "example" : "The Return Of The King",
            "description" : "Book title"
          },
          "description" : {
            "type" : "string",
            "example" : "The Return of the King is the third and final volume of J. R. R. Tolkien's The Lord of the Rings.",
            "description" : "A brief description of the book",
            "nullable" : true
          },
          "author" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Author unique id"
          }
        }
      },
      "AuthorBasic" : {
        "description" : "Main data about the author",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "description" : "Author unique id"
          },
          "name" : {
            "type" : "string",
            "example" : "J.R.R. Tolkien",
            "description" : "Author full name"
          },
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "format" : "url",
                "description" : "Detail author data"
              },
              "books" : {
                "type" : "string",
                "format" : "url",
                "description" : "List of books of the author"
              },
              "quotes" : {
                "type" : "string",
                "format" : "url",
                "description" : "List of quotes of the author"
              }
            }
          }
        },
        "required" : [ "name" ]
      },
      "Author" : {
        "description" : "Full data about the author",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AuthorBasic"
        }, {
          "type" : "object",
          "properties" : {
            "born" : {
              "type" : "integer",
              "example" : 1892,
              "description" : "Year when author was born"
            },
            "died" : {
              "type" : "integer",
              "nullable" : true,
              "example" : 1973,
              "description" : "Year when author died (if it has happened)"
            },
            "bio" : {
              "type" : "string",
              "nullable" : true,
              "example" : "An English writer, poet, philologist, and academic, best known as the author of the high fantasy works The Hobbit and The Lord of the Rings.",
              "description" : "Brief info about the author"
            },
            "quotes_count" : {
              "type" : "integer",
              "example" : 15,
              "description" : "The number of quotes by this author"
            }
          }
        } ]
      },
      "AuthorPayload" : {
        "description" : "Request data",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "J.R.R. Tolkien",
            "description" : "Author full name"
          },
          "born" : {
            "type" : "integer",
            "example" : 1892,
            "description" : "Year when author was born"
          },
          "died" : {
            "type" : "integer",
            "nullable" : true,
            "example" : 1973,
            "description" : "Year when author died (if it has happened)"
          },
          "bio" : {
            "type" : "string",
            "nullable" : true,
            "example" : "An English writer, poet, philologist, and academic, best known as the author of the high fantasy works The Hobbit and The Lord of the Rings.",
            "description" : "Brief info about the author"
          }
        }
      },
      "Links" : {
        "description" : "Set of pagination links",
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "string",
            "format" : "url",
            "description" : "Link to the first page of the list"
          },
          "last" : {
            "type" : "string",
            "format" : "url",
            "description" : "Link to the last page of the list"
          },
          "prev" : {
            "type" : "string",
            "nullable" : true,
            "format" : "url",
            "description" : "Link to the previuos page of the list"
          },
          "next" : {
            "type" : "string",
            "nullable" : true,
            "format" : "url",
            "description" : "Link to the next page of the list"
          }
        }
      },
      "Meta" : {
        "description" : "Pagination metadata",
        "type" : "object",
        "properties" : {
          "current_page" : {
            "type" : "integer",
            "description" : "The number of the current page"
          },
          "last_page" : {
            "type" : "integer",
            "description" : "The number of the last page"
          },
          "per_page" : {
            "type" : "integer",
            "description" : "The number of items per page"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total items count"
          }
        }
      },
      "Pagination" : {
        "description" : "Full pagination metadata and links",
        "type" : "object",
        "properties" : {
          "links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "meta" : {
            "$ref" : "#/components/schemas/Meta"
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "integer"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  },
  "tags" : [ {
    "name" : "quotes",
    "description" : "Operations with Quotes"
  }, {
    "name" : "books",
    "description" : "Every literary quote is related with its book. This is the list of operations with Books resource"
  }, {
    "name" : "authors",
    "description" : "Every literary quote and book has an author. This section contains the list of methods for Authors recourse"
  } ]
}